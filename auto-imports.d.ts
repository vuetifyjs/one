/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
export {}
declare global {
  const DEFAULT_BANNER: typeof import('./lib/stores/banners')['DEFAULT_BANNER']
  const DEFAULT_NOTIFICATION: typeof import('./lib/stores/notifications')['DEFAULT_NOTIFICATION']
  const DEFAULT_PROMOTION: typeof import('./lib/stores/promotions')['DEFAULT_PROMOTION']
  const DEFAULT_SPONSOR: typeof import('./lib/stores/sponsors')['DEFAULT_SPONSOR']
  const DEFAULT_SPOT: typeof import('./lib/stores/spots')['DEFAULT_SPOT']
  const DEFAULT_USER: typeof import('./lib/stores/user')['DEFAULT_USER']
  const EffectScope: typeof import('vue')['EffectScope']
  const acceptHMRUpdate: typeof import('pinia')['acceptHMRUpdate']
  const computed: typeof import('vue')['computed']
  const createApp: typeof import('vue')['createApp']
  const createPinia: typeof import('pinia')['createPinia']
  const customRef: typeof import('vue')['customRef']
  const defineAsyncComponent: typeof import('vue')['defineAsyncComponent']
  const defineComponent: typeof import('vue')['defineComponent']
  const definePage: typeof import('vue-router/auto')['definePage']
  const defineStore: typeof import('pinia')['defineStore']
  const effectScope: typeof import('vue')['effectScope']
  const getActivePinia: typeof import('pinia')['getActivePinia']
  const getCurrentInstance: typeof import('vue')['getCurrentInstance']
  const getCurrentScope: typeof import('vue')['getCurrentScope']
  const h: typeof import('vue')['h']
  const inject: typeof import('vue')['inject']
  const isProxy: typeof import('vue')['isProxy']
  const isReactive: typeof import('vue')['isReactive']
  const isReadonly: typeof import('vue')['isReadonly']
  const isRef: typeof import('vue')['isRef']
  const isWithinRange: typeof import('./src/util/dates')['isWithinRange']
  const mapActions: typeof import('pinia')['mapActions']
  const mapGetters: typeof import('pinia')['mapGetters']
  const mapState: typeof import('pinia')['mapState']
  const mapStores: typeof import('pinia')['mapStores']
  const mapWritableState: typeof import('pinia')['mapWritableState']
  const markRaw: typeof import('vue')['markRaw']
  const nextTick: typeof import('vue')['nextTick']
  const onActivated: typeof import('vue')['onActivated']
  const onBeforeMount: typeof import('vue')['onBeforeMount']
  const onBeforeRouteLeave: typeof import('vue-router')['onBeforeRouteLeave']
  const onBeforeRouteUpdate: typeof import('vue-router')['onBeforeRouteUpdate']
  const onBeforeUnmount: typeof import('vue')['onBeforeUnmount']
  const onBeforeUpdate: typeof import('vue')['onBeforeUpdate']
  const onDeactivated: typeof import('vue')['onDeactivated']
  const onErrorCaptured: typeof import('vue')['onErrorCaptured']
  const onMounted: typeof import('vue')['onMounted']
  const onRenderTracked: typeof import('vue')['onRenderTracked']
  const onRenderTriggered: typeof import('vue')['onRenderTriggered']
  const onScopeDispose: typeof import('vue')['onScopeDispose']
  const onServerPrefetch: typeof import('vue')['onServerPrefetch']
  const onUnmounted: typeof import('vue')['onUnmounted']
  const onUpdated: typeof import('vue')['onUpdated']
  const provide: typeof import('vue')['provide']
  const reactive: typeof import('vue')['reactive']
  const readonly: typeof import('vue')['readonly']
  const ref: typeof import('vue')['ref']
  const resolveComponent: typeof import('vue')['resolveComponent']
  const setActivePinia: typeof import('pinia')['setActivePinia']
  const setMapStoreSuffix: typeof import('pinia')['setMapStoreSuffix']
  const shallowReactive: typeof import('vue')['shallowReactive']
  const shallowReadonly: typeof import('vue')['shallowReadonly']
  const shallowRef: typeof import('vue')['shallowRef']
  const storeToRefs: typeof import('pinia')['storeToRefs']
  const toRaw: typeof import('vue')['toRaw']
  const toRef: typeof import('vue')['toRef']
  const toRefs: typeof import('vue')['toRefs']
  const toValue: typeof import('vue')['toValue']
  const triggerRef: typeof import('vue')['triggerRef']
  const unref: typeof import('vue')['unref']
  const useAttrs: typeof import('vue')['useAttrs']
  const useAuthStore: typeof import('./lib/stores/auth')['useAuthStore']
  const useBannersStore: typeof import('./lib/stores/banners')['useBannersStore']
  const useBinsStore: typeof import('./lib/stores/bins')['useBinsStore']
  const useCssModule: typeof import('vue')['useCssModule']
  const useCssVars: typeof import('vue')['useCssVars']
  const useDate: typeof import('vuetify')['useDate']
  const useDisplay: typeof import('vuetify')['useDisplay']
  const useDownloadsStore: typeof import('./lib/stores/downloads')['useDownloadsStore']
  const useHttpStore: typeof import('./lib/stores/http')['useHttpStore']
  const useLink: typeof import('vue-router')['useLink']
  const useNotificationsStore: typeof import('./lib/stores/notifications')['useNotificationsStore']
  const useOneStore: typeof import('./lib/stores/one')['useOneStore']
  const useParams: typeof import('./lib/composables/route')['useParams']
  const useProductsStore: typeof import('./lib/stores/products')['useProductsStore']
  const usePromotionsStore: typeof import('./lib/stores/promotions')['usePromotionsStore']
  const useQuery: typeof import('./lib/composables/route')['useQuery']
  const useRoute: typeof import('vue-router')['useRoute']
  const useRouter: typeof import('vue-router')['useRouter']
  const useSettingsStore: typeof import('./lib/stores/settings')['useSettingsStore']
  const useSiteStore: typeof import('./lib/stores/site')['useSiteStore']
  const useSlots: typeof import('vue')['useSlots']
  const useSponsorsStore: typeof import('./lib/stores/sponsors')['useSponsorsStore']
  const useSpotsStore: typeof import('./lib/stores/spots')['useSpotsStore']
  const useTheme: typeof import('vuetify')['useTheme']
  const useUserStore: typeof import('./lib/stores/user')['useUserStore']
  const watch: typeof import('vue')['watch']
  const watchEffect: typeof import('vue')['watchEffect']
  const watchPostEffect: typeof import('vue')['watchPostEffect']
  const watchSyncEffect: typeof import('vue')['watchSyncEffect']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { Component, ComponentPublicInstance, ComputedRef, ExtractDefaultPropTypes, ExtractPropTypes, ExtractPublicPropTypes, InjectionKey, PropType, Ref, VNode, WritableComputedRef } from 'vue'
  import('vue')
}
// for vue template auto import
import { UnwrapRef } from 'vue'
declare module 'vue' {
  interface GlobalComponents {}
  interface ComponentCustomProperties {
    readonly DEFAULT_BANNER: UnwrapRef<typeof import('./lib/stores/banners')['DEFAULT_BANNER']>
    readonly DEFAULT_NOTIFICATION: UnwrapRef<typeof import('./lib/stores/notifications')['DEFAULT_NOTIFICATION']>
    readonly DEFAULT_PROMOTION: UnwrapRef<typeof import('./lib/stores/promotions')['DEFAULT_PROMOTION']>
    readonly DEFAULT_SPONSOR: UnwrapRef<typeof import('./lib/stores/sponsors')['DEFAULT_SPONSOR']>
    readonly DEFAULT_SPOT: UnwrapRef<typeof import('./lib/stores/spots')['DEFAULT_SPOT']>
    readonly DEFAULT_USER: UnwrapRef<typeof import('./lib/stores/user')['DEFAULT_USER']>
    readonly EffectScope: UnwrapRef<typeof import('vue')['EffectScope']>
    readonly acceptHMRUpdate: UnwrapRef<typeof import('pinia')['acceptHMRUpdate']>
    readonly computed: UnwrapRef<typeof import('vue')['computed']>
    readonly createApp: UnwrapRef<typeof import('vue')['createApp']>
    readonly createPinia: UnwrapRef<typeof import('pinia')['createPinia']>
    readonly customRef: UnwrapRef<typeof import('vue')['customRef']>
    readonly defineAsyncComponent: UnwrapRef<typeof import('vue')['defineAsyncComponent']>
    readonly defineComponent: UnwrapRef<typeof import('vue')['defineComponent']>
    readonly definePage: UnwrapRef<typeof import('vue-router/auto')['definePage']>
    readonly defineStore: UnwrapRef<typeof import('pinia')['defineStore']>
    readonly effectScope: UnwrapRef<typeof import('vue')['effectScope']>
    readonly getActivePinia: UnwrapRef<typeof import('pinia')['getActivePinia']>
    readonly getCurrentInstance: UnwrapRef<typeof import('vue')['getCurrentInstance']>
    readonly getCurrentScope: UnwrapRef<typeof import('vue')['getCurrentScope']>
    readonly h: UnwrapRef<typeof import('vue')['h']>
    readonly inject: UnwrapRef<typeof import('vue')['inject']>
    readonly isProxy: UnwrapRef<typeof import('vue')['isProxy']>
    readonly isReactive: UnwrapRef<typeof import('vue')['isReactive']>
    readonly isReadonly: UnwrapRef<typeof import('vue')['isReadonly']>
    readonly isRef: UnwrapRef<typeof import('vue')['isRef']>
    readonly isWithinRange: UnwrapRef<typeof import('./src/util/dates')['isWithinRange']>
    readonly mapActions: UnwrapRef<typeof import('pinia')['mapActions']>
    readonly mapGetters: UnwrapRef<typeof import('pinia')['mapGetters']>
    readonly mapState: UnwrapRef<typeof import('pinia')['mapState']>
    readonly mapStores: UnwrapRef<typeof import('pinia')['mapStores']>
    readonly mapWritableState: UnwrapRef<typeof import('pinia')['mapWritableState']>
    readonly markRaw: UnwrapRef<typeof import('vue')['markRaw']>
    readonly nextTick: UnwrapRef<typeof import('vue')['nextTick']>
    readonly onActivated: UnwrapRef<typeof import('vue')['onActivated']>
    readonly onBeforeMount: UnwrapRef<typeof import('vue')['onBeforeMount']>
    readonly onBeforeRouteLeave: UnwrapRef<typeof import('vue-router')['onBeforeRouteLeave']>
    readonly onBeforeRouteUpdate: UnwrapRef<typeof import('vue-router')['onBeforeRouteUpdate']>
    readonly onBeforeUnmount: UnwrapRef<typeof import('vue')['onBeforeUnmount']>
    readonly onBeforeUpdate: UnwrapRef<typeof import('vue')['onBeforeUpdate']>
    readonly onDeactivated: UnwrapRef<typeof import('vue')['onDeactivated']>
    readonly onErrorCaptured: UnwrapRef<typeof import('vue')['onErrorCaptured']>
    readonly onMounted: UnwrapRef<typeof import('vue')['onMounted']>
    readonly onRenderTracked: UnwrapRef<typeof import('vue')['onRenderTracked']>
    readonly onRenderTriggered: UnwrapRef<typeof import('vue')['onRenderTriggered']>
    readonly onScopeDispose: UnwrapRef<typeof import('vue')['onScopeDispose']>
    readonly onServerPrefetch: UnwrapRef<typeof import('vue')['onServerPrefetch']>
    readonly onUnmounted: UnwrapRef<typeof import('vue')['onUnmounted']>
    readonly onUpdated: UnwrapRef<typeof import('vue')['onUpdated']>
    readonly provide: UnwrapRef<typeof import('vue')['provide']>
    readonly reactive: UnwrapRef<typeof import('vue')['reactive']>
    readonly readonly: UnwrapRef<typeof import('vue')['readonly']>
    readonly ref: UnwrapRef<typeof import('vue')['ref']>
    readonly resolveComponent: UnwrapRef<typeof import('vue')['resolveComponent']>
    readonly setActivePinia: UnwrapRef<typeof import('pinia')['setActivePinia']>
    readonly setMapStoreSuffix: UnwrapRef<typeof import('pinia')['setMapStoreSuffix']>
    readonly shallowReactive: UnwrapRef<typeof import('vue')['shallowReactive']>
    readonly shallowReadonly: UnwrapRef<typeof import('vue')['shallowReadonly']>
    readonly shallowRef: UnwrapRef<typeof import('vue')['shallowRef']>
    readonly storeToRefs: UnwrapRef<typeof import('pinia')['storeToRefs']>
    readonly toRaw: UnwrapRef<typeof import('vue')['toRaw']>
    readonly toRef: UnwrapRef<typeof import('vue')['toRef']>
    readonly toRefs: UnwrapRef<typeof import('vue')['toRefs']>
    readonly toValue: UnwrapRef<typeof import('vue')['toValue']>
    readonly triggerRef: UnwrapRef<typeof import('vue')['triggerRef']>
    readonly unref: UnwrapRef<typeof import('vue')['unref']>
    readonly useAttrs: UnwrapRef<typeof import('vue')['useAttrs']>
    readonly useAuthStore: UnwrapRef<typeof import('./lib/stores/auth')['useAuthStore']>
    readonly useBannersStore: UnwrapRef<typeof import('./lib/stores/banners')['useBannersStore']>
    readonly useBinsStore: UnwrapRef<typeof import('./lib/stores/bins')['useBinsStore']>
    readonly useCssModule: UnwrapRef<typeof import('vue')['useCssModule']>
    readonly useCssVars: UnwrapRef<typeof import('vue')['useCssVars']>
    readonly useDate: UnwrapRef<typeof import('vuetify')['useDate']>
    readonly useDisplay: UnwrapRef<typeof import('vuetify')['useDisplay']>
    readonly useDownloadsStore: UnwrapRef<typeof import('./lib/stores/downloads')['useDownloadsStore']>
    readonly useHttpStore: UnwrapRef<typeof import('./lib/stores/http')['useHttpStore']>
    readonly useLink: UnwrapRef<typeof import('vue-router')['useLink']>
    readonly useNotificationsStore: UnwrapRef<typeof import('./lib/stores/notifications')['useNotificationsStore']>
    readonly useOneStore: UnwrapRef<typeof import('./lib/stores/one')['useOneStore']>
    readonly useParams: UnwrapRef<typeof import('./lib/composables/route')['useParams']>
    readonly useProductsStore: UnwrapRef<typeof import('./lib/stores/products')['useProductsStore']>
    readonly usePromotionsStore: UnwrapRef<typeof import('./lib/stores/promotions')['usePromotionsStore']>
    readonly useQuery: UnwrapRef<typeof import('./lib/composables/route')['useQuery']>
    readonly useRoute: UnwrapRef<typeof import('vue-router')['useRoute']>
    readonly useRouter: UnwrapRef<typeof import('vue-router')['useRouter']>
    readonly useSettingsStore: UnwrapRef<typeof import('./lib/stores/settings')['useSettingsStore']>
    readonly useSiteStore: UnwrapRef<typeof import('./lib/stores/site')['useSiteStore']>
    readonly useSlots: UnwrapRef<typeof import('vue')['useSlots']>
    readonly useSponsorsStore: UnwrapRef<typeof import('./lib/stores/sponsors')['useSponsorsStore']>
    readonly useSpotsStore: UnwrapRef<typeof import('./lib/stores/spots')['useSpotsStore']>
    readonly useTheme: UnwrapRef<typeof import('vuetify')['useTheme']>
    readonly useUserStore: UnwrapRef<typeof import('./lib/stores/user')['useUserStore']>
    readonly watch: UnwrapRef<typeof import('vue')['watch']>
    readonly watchEffect: UnwrapRef<typeof import('vue')['watchEffect']>
    readonly watchPostEffect: UnwrapRef<typeof import('vue')['watchPostEffect']>
    readonly watchSyncEffect: UnwrapRef<typeof import('vue')['watchSyncEffect']>
  }
}
declare module '@vue/runtime-core' {
  interface GlobalComponents {}
  interface ComponentCustomProperties {
    readonly DEFAULT_BANNER: UnwrapRef<typeof import('./lib/stores/banners')['DEFAULT_BANNER']>
    readonly DEFAULT_NOTIFICATION: UnwrapRef<typeof import('./lib/stores/notifications')['DEFAULT_NOTIFICATION']>
    readonly DEFAULT_PROMOTION: UnwrapRef<typeof import('./lib/stores/promotions')['DEFAULT_PROMOTION']>
    readonly DEFAULT_SPONSOR: UnwrapRef<typeof import('./lib/stores/sponsors')['DEFAULT_SPONSOR']>
    readonly DEFAULT_SPOT: UnwrapRef<typeof import('./lib/stores/spots')['DEFAULT_SPOT']>
    readonly DEFAULT_USER: UnwrapRef<typeof import('./lib/stores/user')['DEFAULT_USER']>
    readonly EffectScope: UnwrapRef<typeof import('vue')['EffectScope']>
    readonly acceptHMRUpdate: UnwrapRef<typeof import('pinia')['acceptHMRUpdate']>
    readonly computed: UnwrapRef<typeof import('vue')['computed']>
    readonly createApp: UnwrapRef<typeof import('vue')['createApp']>
    readonly createPinia: UnwrapRef<typeof import('pinia')['createPinia']>
    readonly customRef: UnwrapRef<typeof import('vue')['customRef']>
    readonly defineAsyncComponent: UnwrapRef<typeof import('vue')['defineAsyncComponent']>
    readonly defineComponent: UnwrapRef<typeof import('vue')['defineComponent']>
    readonly definePage: UnwrapRef<typeof import('vue-router/auto')['definePage']>
    readonly defineStore: UnwrapRef<typeof import('pinia')['defineStore']>
    readonly effectScope: UnwrapRef<typeof import('vue')['effectScope']>
    readonly getActivePinia: UnwrapRef<typeof import('pinia')['getActivePinia']>
    readonly getCurrentInstance: UnwrapRef<typeof import('vue')['getCurrentInstance']>
    readonly getCurrentScope: UnwrapRef<typeof import('vue')['getCurrentScope']>
    readonly h: UnwrapRef<typeof import('vue')['h']>
    readonly inject: UnwrapRef<typeof import('vue')['inject']>
    readonly isProxy: UnwrapRef<typeof import('vue')['isProxy']>
    readonly isReactive: UnwrapRef<typeof import('vue')['isReactive']>
    readonly isReadonly: UnwrapRef<typeof import('vue')['isReadonly']>
    readonly isRef: UnwrapRef<typeof import('vue')['isRef']>
    readonly isWithinRange: UnwrapRef<typeof import('./src/util/dates')['isWithinRange']>
    readonly mapActions: UnwrapRef<typeof import('pinia')['mapActions']>
    readonly mapGetters: UnwrapRef<typeof import('pinia')['mapGetters']>
    readonly mapState: UnwrapRef<typeof import('pinia')['mapState']>
    readonly mapStores: UnwrapRef<typeof import('pinia')['mapStores']>
    readonly mapWritableState: UnwrapRef<typeof import('pinia')['mapWritableState']>
    readonly markRaw: UnwrapRef<typeof import('vue')['markRaw']>
    readonly nextTick: UnwrapRef<typeof import('vue')['nextTick']>
    readonly onActivated: UnwrapRef<typeof import('vue')['onActivated']>
    readonly onBeforeMount: UnwrapRef<typeof import('vue')['onBeforeMount']>
    readonly onBeforeRouteLeave: UnwrapRef<typeof import('vue-router')['onBeforeRouteLeave']>
    readonly onBeforeRouteUpdate: UnwrapRef<typeof import('vue-router')['onBeforeRouteUpdate']>
    readonly onBeforeUnmount: UnwrapRef<typeof import('vue')['onBeforeUnmount']>
    readonly onBeforeUpdate: UnwrapRef<typeof import('vue')['onBeforeUpdate']>
    readonly onDeactivated: UnwrapRef<typeof import('vue')['onDeactivated']>
    readonly onErrorCaptured: UnwrapRef<typeof import('vue')['onErrorCaptured']>
    readonly onMounted: UnwrapRef<typeof import('vue')['onMounted']>
    readonly onRenderTracked: UnwrapRef<typeof import('vue')['onRenderTracked']>
    readonly onRenderTriggered: UnwrapRef<typeof import('vue')['onRenderTriggered']>
    readonly onScopeDispose: UnwrapRef<typeof import('vue')['onScopeDispose']>
    readonly onServerPrefetch: UnwrapRef<typeof import('vue')['onServerPrefetch']>
    readonly onUnmounted: UnwrapRef<typeof import('vue')['onUnmounted']>
    readonly onUpdated: UnwrapRef<typeof import('vue')['onUpdated']>
    readonly provide: UnwrapRef<typeof import('vue')['provide']>
    readonly reactive: UnwrapRef<typeof import('vue')['reactive']>
    readonly readonly: UnwrapRef<typeof import('vue')['readonly']>
    readonly ref: UnwrapRef<typeof import('vue')['ref']>
    readonly resolveComponent: UnwrapRef<typeof import('vue')['resolveComponent']>
    readonly setActivePinia: UnwrapRef<typeof import('pinia')['setActivePinia']>
    readonly setMapStoreSuffix: UnwrapRef<typeof import('pinia')['setMapStoreSuffix']>
    readonly shallowReactive: UnwrapRef<typeof import('vue')['shallowReactive']>
    readonly shallowReadonly: UnwrapRef<typeof import('vue')['shallowReadonly']>
    readonly shallowRef: UnwrapRef<typeof import('vue')['shallowRef']>
    readonly storeToRefs: UnwrapRef<typeof import('pinia')['storeToRefs']>
    readonly toRaw: UnwrapRef<typeof import('vue')['toRaw']>
    readonly toRef: UnwrapRef<typeof import('vue')['toRef']>
    readonly toRefs: UnwrapRef<typeof import('vue')['toRefs']>
    readonly toValue: UnwrapRef<typeof import('vue')['toValue']>
    readonly triggerRef: UnwrapRef<typeof import('vue')['triggerRef']>
    readonly unref: UnwrapRef<typeof import('vue')['unref']>
    readonly useAttrs: UnwrapRef<typeof import('vue')['useAttrs']>
    readonly useAuthStore: UnwrapRef<typeof import('./lib/stores/auth')['useAuthStore']>
    readonly useBannersStore: UnwrapRef<typeof import('./lib/stores/banners')['useBannersStore']>
    readonly useBinsStore: UnwrapRef<typeof import('./lib/stores/bins')['useBinsStore']>
    readonly useCssModule: UnwrapRef<typeof import('vue')['useCssModule']>
    readonly useCssVars: UnwrapRef<typeof import('vue')['useCssVars']>
    readonly useDate: UnwrapRef<typeof import('vuetify')['useDate']>
    readonly useDisplay: UnwrapRef<typeof import('vuetify')['useDisplay']>
    readonly useDownloadsStore: UnwrapRef<typeof import('./lib/stores/downloads')['useDownloadsStore']>
    readonly useHttpStore: UnwrapRef<typeof import('./lib/stores/http')['useHttpStore']>
    readonly useLink: UnwrapRef<typeof import('vue-router')['useLink']>
    readonly useNotificationsStore: UnwrapRef<typeof import('./lib/stores/notifications')['useNotificationsStore']>
    readonly useOneStore: UnwrapRef<typeof import('./lib/stores/one')['useOneStore']>
    readonly useParams: UnwrapRef<typeof import('./lib/composables/route')['useParams']>
    readonly useProductsStore: UnwrapRef<typeof import('./lib/stores/products')['useProductsStore']>
    readonly usePromotionsStore: UnwrapRef<typeof import('./lib/stores/promotions')['usePromotionsStore']>
    readonly useQuery: UnwrapRef<typeof import('./lib/composables/route')['useQuery']>
    readonly useRoute: UnwrapRef<typeof import('vue-router')['useRoute']>
    readonly useRouter: UnwrapRef<typeof import('vue-router')['useRouter']>
    readonly useSettingsStore: UnwrapRef<typeof import('./lib/stores/settings')['useSettingsStore']>
    readonly useSiteStore: UnwrapRef<typeof import('./lib/stores/site')['useSiteStore']>
    readonly useSlots: UnwrapRef<typeof import('vue')['useSlots']>
    readonly useSponsorsStore: UnwrapRef<typeof import('./lib/stores/sponsors')['useSponsorsStore']>
    readonly useSpotsStore: UnwrapRef<typeof import('./lib/stores/spots')['useSpotsStore']>
    readonly useTheme: UnwrapRef<typeof import('vuetify')['useTheme']>
    readonly useUserStore: UnwrapRef<typeof import('./lib/stores/user')['useUserStore']>
    readonly watch: UnwrapRef<typeof import('vue')['watch']>
    readonly watchEffect: UnwrapRef<typeof import('vue')['watchEffect']>
    readonly watchPostEffect: UnwrapRef<typeof import('vue')['watchPostEffect']>
    readonly watchSyncEffect: UnwrapRef<typeof import('vue')['watchSyncEffect']>
  }
}
